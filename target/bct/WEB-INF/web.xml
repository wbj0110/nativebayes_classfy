<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5"
xmlns="http://java.sun.com/xml/ns/javaee"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

    <!-- Servlet class "rest" with url pattern "/*" means any uri with the root of this web application will call DispatcherServlet.
        DispatcherServlet will look for configuration files following this naming convention - [servlet-name]-servlet.xml.
        So with dispatcher servlet class as "rest" it will look for file named 'rest-servlet.xml'.
    -->
    
    <display-name>Archetype Created Web Application</display-name>
 
    <!-- 该servlet为tomcat,jetty等容器提供,将静态资源映射从/改为/static/目录，如原来访问 http://localhost/foo.css ,现在http://localhost/static/foo.css --> 
   <!--  <servlet-mapping>  
    <servlet-name>default</servlet-name>  
    <url-pattern>/static/*</url-pattern>  
	</servlet-mapping>  -->
	
	 <context-param> 
     <param-name>webAppRootKey</param-name> 
     <param-value>webapp.root</param-value> 
   	</context-param> 
   	
   	<listener>   
    <listener-class>    
    org.springframework.web.util.WebAppRootListener   
    </listener-class>  
	</listener>   
   
      	<listener>   
    <listener-class>    
    com.xiaomishu.spring4rest.bayes.framework.FileInitialListener   
    </listener-class>  
	</listener>
	
	 <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:/spring-*.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
   <!-- 初始项目的日志 -->  
    <!--<context-param> 
     <param-name> log4jConfigLocation</param-name> 
     <param-value> /WEB-INF/log4j.properties </param-value> 
    </context-param>  -->
    
    <servlet>
        <servlet-name>rest</servlet-name>
        <servlet-class>
            org.springframework.web.servlet.DispatcherServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>


<!-- URL重写filter,用于将访问静态资源http://localhost/foo.css 转为http://localhost/static/foo.css -->  
<!-- <filter>  
    <filter-name>UrlRewriteFilter</filter-name>  
    <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>  
    <init-param>  
            <param-name>confReloadCheckInterval</param-name>  
            <param-value>60</param-value>  
        </init-param>  
    <init-param>  
                <param-name>logLevel</param-name>  
                <param-value>DEBUG</param-value>  
        </init-param>       
</filter>  
<filter-mapping>  
    <filter-name>UrlRewriteFilter</filter-name>  
    <url-pattern>/*</url-pattern>  
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
</filter-mapping>  -->

    <servlet-mapping>
        <servlet-name>rest</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    
    
    <!-- 浏览器不支持put,delete等method,由该filter将/blog?_method=delete转换为标准的http delete方法 -->  
<!-- <filter>  
    <filter-name>HiddenHttpMethodFilter</filter-name>  
    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>  
</filter>  
  
<filter-mapping>  
    <filter-name>HiddenHttpMethodFilter</filter-name>  
    <servlet-name>rest</servlet-name>  
</filter-mapping>  -->

 <filter>  
     <filter-name>CharacterEncodingFilter</filter-name>  
     <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
    <init-param>  
         <param-name>encoding</param-name>  
         <param-value>utf-8</param-value>  
    </init-param>  
    <init-param>  
            <param-name>forceEncoding</param-name>  
            <param-value>true</param-value>  
        </init-param> 
 </filter>  
<filter-mapping>  
     <filter-name>CharacterEncodingFilter</filter-name>  
     <url-pattern>/*</url-pattern>  
 </filter-mapping>  
  <!--   <filter>
    <filter-name>hibernateFilter</filter-name>
 <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
  <init-param> 
          <param-name>sessionFactoryBeanName</param-name> 
          <param-value>sessionFactory</param-value> 
   </init-param> 
   <init-param> 
            <param-name>singleSession</param-name> 
            <param-value>false</param-value>            
   </init-param> 
  <init-param> 
           <param-name>flushMode </param-name> 
           <param-value>AUTO</param-value>         
    </init-param>  
</filter>

<filter-mapping>
 <filter-name>hibernateFilter</filter-name>
 <url-pattern>/*</url-pattern>
</filter-mapping> -->

<!--OpenSessionInViewFilter配置，解决延迟加载时Session会关闭的问题 -->  
   <!--  <filter>
        <filter-name>openSessionInViewFilter</filter-name>
        <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>openSessionInViewFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    session过期时间：  20
    <session-config>   
        <session-timeout>20</session-timeout>
    </session-config> -->
    
    <!-- 错误界面  -->
    <error-page>
        <exception-type>java.lang.Throwable</exception-type>
        <location>/WEB-INF/views/error/500.jsp</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/WEB-INF/error/500.jsp</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/WEB-INF/error/404.jsp</location>
    </error-page>
    <error-page>
        <error-code>400</error-code>
        <location>/WEB-INF/error/400.jsp</location>
    </error-page>

  <servlet-mapping>
        <servlet-name>jsp</servlet-name>
        <url-pattern>*.jsp</url-pattern>
        <url-pattern>*.jspx</url-pattern>
        <url-pattern>*.htm</url-pattern>
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>
<welcome-file-list>
      <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
</web-app>